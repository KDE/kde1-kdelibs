include_directories(
    ../kdecore
    ../kdeui
)
set(BASE_LIBS
    Qt::Qt1
    X11::X11
    kdecore
    kdeui
)

QT1_WRAP_MOC(MOC_CHARSET kcharsetstest.h)
QT1_WRAP_MOC(MOC_CONFIG kconfigtest.h)
QT1_WRAP_MOC(MOC_CONTAINER kcontainertest.h)
QT1_WRAP_MOC(MOC_DATEPICK kdatepicktestdlg.h)
QT1_WRAP_MOC(MOC_ICONLOADER kiconloadertestmain.h)
QT1_WRAP_MOC(MOC_LED kledtest.h)
QT1_WRAP_MOC(MOC_LINE klinetest.h)
QT1_WRAP_MOC(MOC_LOCALE klocaletest.h)
QT1_WRAP_MOC(MOC_MSGBOX kmsgboxtest.h)
QT1_WRAP_MOC(MOC_PANNER kpannertest.h)
QT1_WRAP_MOC(MOC_PROCESS kprocesstest.h)
QT1_WRAP_MOC(MOC_RULER krulertest.h)
QT1_WRAP_MOC(MOC_SPINBOX kspinboxtest.h)
QT1_WRAP_MOC(MOC_STATUSBAR kstatusbartest.h)
QT1_WRAP_MOC(MOC_TABCTL ktabctltest.h)
QT1_WRAP_MOC(MOC_TREELIST ktreelisttest.h)
QT1_WRAP_MOC(MOC_WINDOW kwindowtest.h)

add_executable(kbuttonboxdemo kbuttonboxtest.cpp)
add_executable(kcharsetsdemo kcharsetstest.cpp ${MOC_CHARSET})
add_executable(kcolordlgdemo kcolordlgtest.cpp)
add_executable(kconfigdemo kconfigtest.cpp ${MOC_CONFIG})
add_executable(kcontainerdemo kcontainertest.cpp ${MOC_CONTAINER})
add_executable(kdatepickdemo kdatepicktest.cpp kdatepicktestdlg.cpp ${MOC_DATEPICK})
add_executable(kfontdialogdemo kfontdialogtest.cpp)
add_executable(kiconloaderdemo kiconloadertest.cpp kiconloadertestmain.cpp ${MOC_ICONLOADER})
add_executable(kledlampdemo kledlamptest.cpp)
add_executable(kleddemo kledtest.cpp ${MOC_LED})
add_executable(klinedemo klinetest.cpp ${MOC_LINE})
add_executable(klocaledemo klocaletest.cpp ${MOC_LOCALE})
add_executable(kmsgboxdemo kmsgboxtest.cpp ${MOC_MSGBOX})
add_executable(knotebookdemo knotebooktest.cpp)
add_executable(kpannerdemo kpannertest.cpp ${MOC_PANNER})
add_executable(kpopupdemo kpopuptest.cpp)
add_executable(kprocessdemo kprocesstest.cpp ${MOC_PROCESS})
add_executable(kprogressdemo kprogresstest.cpp)
add_executable(kquickhelpdemo kquickhelptest.cpp)
add_executable(krulerdemo krulertest.cpp ${MOC_RULER})
add_executable(kseparatordemo kseparatortest.cpp)
add_executable(ksimpleconfigtest ksimpleconfigtest.cpp)
add_executable(kspinboxdemo kspinboxtest.cpp ${MOC_SPINBOX})
add_executable(kstatusbardemo kstatusbartest.cpp ${MOC_STATUSBAR})
add_executable(ktabctldemo ktabctltest.cpp ${MOC_TABCTL})
add_executable(ktreelistdemo ktreelisttest.cpp ${MOC_TREELIST})
add_executable(kurltest kurltest.cpp)
add_executable(kwindowdemo kwindowtest.cpp ${MOC_WINDOW})
add_executable(kwizarddemo kwizardtest.cpp)

target_link_libraries(kbuttonboxdemo ${BASE_LIBS})
target_link_libraries(kcharsetsdemo ${BASE_LIBS})
target_link_libraries(kcolordlgdemo ${BASE_LIBS})
target_link_libraries(kconfigdemo ${BASE_LIBS})
target_link_libraries(kcontainerdemo ${BASE_LIBS})
target_link_libraries(kdatepickdemo ${BASE_LIBS})
target_link_libraries(kfontdialogdemo ${BASE_LIBS})
target_link_libraries(kiconloaderdemo ${BASE_LIBS})
target_link_libraries(kledlampdemo ${BASE_LIBS})
target_link_libraries(kleddemo ${BASE_LIBS})
target_link_libraries(klinedemo ${BASE_LIBS})
target_link_libraries(klocaledemo ${BASE_LIBS})
target_link_libraries(kmsgboxdemo ${BASE_LIBS})
target_link_libraries(knotebookdemo ${BASE_LIBS})
target_link_libraries(kpannerdemo ${BASE_LIBS})
target_link_libraries(kpopupdemo ${BASE_LIBS})
target_link_libraries(kprocessdemo ${BASE_LIBS})
target_link_libraries(kprogressdemo ${BASE_LIBS})
target_link_libraries(kquickhelpdemo ${BASE_LIBS})
target_link_libraries(krulerdemo ${BASE_LIBS})
target_link_libraries(kseparatordemo ${BASE_LIBS})
target_link_libraries(ksimpleconfigtest ${BASE_LIBS})
target_link_libraries(kspinboxdemo ${BASE_LIBS})
target_link_libraries(kstatusbardemo ${BASE_LIBS})
target_link_libraries(ktabctldemo ${BASE_LIBS})
target_link_libraries(ktreelistdemo ${BASE_LIBS})
target_link_libraries(kurltest ${BASE_LIBS})
target_link_libraries(kwindowdemo ${BASE_LIBS})
target_link_libraries(kwizarddemo ${BASE_LIBS})

add_test(kurltest COMMAND kurltest)
add_test(ksimpleconfigtest COMMAND ksimpleconfigtest)
